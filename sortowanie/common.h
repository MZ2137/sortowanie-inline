#pragma once
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std; inline void Sort(vector<int>& values) { sort(values.begin(), values.end()); } inline int partition(vector<int>& values, int left, int right) { int pivotIndex = left + (right - left) / 2; int pivotValue = values[pivotIndex]; int i = left, j = right; int temp; while (i <= j) { while (values[i] < pivotValue) { i++; }while (values[j] > pivotValue) { j--; }if (i <= j) { temp = values[i]; values[i] = values[j]; values[j] = temp; i++; j--; } }return i; } inline void quicksort(vector<int>& values, int left, int right) { if (left < right) { int pivotIndex = partition(values, left, right); quicksort(values, left, pivotIndex - 1); quicksort(values, pivotIndex, right); } } inline void bubbleSort(vector<int>& a) { bool swapp = true; while (swapp) { swapp = false; for (int i = 0; i < a.size() - 1; i++) { if (a[i] > a[i + 1]) { a[i] += a[i + 1]; a[i + 1] = a[i] - a[i + 1]; a[i] -= a[i + 1]; swapp = true; } } } } inline void print(vector<int> values) { for (int it = 0; it < values.size(); it++) { cout << values[it] << " "; } } inline void funkcja() { vector<int> values; for (int i = 0; i < 20; i++) { values.push_back(rand() % 2137); }cout << "Vector przed posortowaniem: \n"; print(values); cout << "\n\n"; int in; cout << "Wybierz sposób sortowania\n1. Quick Sort\n2. Bubble\n3. Jakieœ gufno\n"; cin >> in; switch (in) { case 1:quicksort(values, 0, values.size() - 1); print(values); break; case 2:bubbleSort(values); print(values); break; case 3:Sort(values); print(values); break; } } int main() { setlocale(LC_CTYPE, "Polish"); funkcja(); return EXIT_SUCCESS; }